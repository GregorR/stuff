#!/bin/bash
# lddcapture: A simple script to turn a binary into an appdir

# Copyright (c) 2009 Gregor Richards
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# The important parts of libc that will need to be removed from the appdir
LIBC="
libanl.                                                                                                     
libc.                                                                                                       
libcidn.
libcrypt.
libdl.
libm.
libpthread.
libresolv.
librt.
libutil.
"

die() {
    echo "$1" >&2
    exit 1
}

if [ ! "$2" ]
then
    echo 'Use: lddcapture <appdir> <binary> [options, other libraries]'
    echo 'Options:'
    echo '  -s <srcdir>: Download sources for dependencies to <srcdir> (Debian only)'
    echo '  -x <exclusion file>: Exclude every library named (by prefix) in the exclusion file.'
    exit 1
fi

APPDIR="$1"
BIN="$2"
BINNAME=`basename "$BIN"`
shift; shift

OTHERLIBS=""
SRCDIR=""
EXCLUSION=""

while [ "$1" ]
do
    i="$1"
    shift
    if expr "$i" : "-" > /dev/null 2> /dev/null
    then
        if [ "$i" = "-s" ]
        then
            SRCDIR="$1"
            shift
        elif [ "$i" = "-x" ]
        then
            EXCLUSION="$EXCLUSION `cat $1`"
            shift
        else
            echo 'Unrecognized option '"$i"
            exit 1
        fi
    else
        OTHERLIBS="$OTHERLIBS $i"
    fi
done

mkdir "$APPDIR" || die "Failed to mkdir $APPDIR"
mkdir -p "$SRCDIR" || die "Failed to mkdir $SRCDIR"
mkdir -p "$APPDIR/inst/bin"
mkdir -p "$APPDIR/inst/lib"

# Copy in the libraries
for i in `ldd "$BIN" | sed 's/\t/ /g' | cut -d' ' -f 4`
do
    cp -vfp "$i" "$APPDIR/inst/lib"
done
for lib in $OTHERLIBS
do
    for i in `ldd "$lib" | sed 's/\t/ /g' | cut -d' ' -f 4`
    do
        cp -vfp "$i" "$APPDIR"/inst/lib
    done
    cp -vfp "$lib" "$APPDIR/inst/lib"
done

# And the binary
cp -vfp "$BIN" "$APPDIR/inst/bin"

# Strip everything
find "$APPDIR" -type f | xargs strip --strip-unneeded

# Now make the script to run it
echo '#!/bin/sh
# This appdir created by lddcapture.
# http://codu.org/projects/stuff/hg/index.cgi/raw-file/tip/lddcapture

APPDIR="`dirname $0`"
if [ "$LD_LIBRARY_PATH" ]
then
    LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$APPDIR/inst/lib"
else
    LD_LIBRARY_PATH="$APPDIR/inst/lib"
fi
export LD_LIBRARY_PATH
exec "$APPDIR/inst/bin/'$BINNAME'" "$@"' > "$APPDIR/$BINNAME"
chmod 0755 "$APPDIR/$BINNAME"

# Remove the excluded stuff
for lib in $LIBC $EXCLUSION
do
    rm -vf "$APPDIR"/inst/lib/$lib*
done

# Get sources
if [ "$SRCDIR" ]
then
    for lib in "$APPDIR"/inst/lib/*
    do
        libb=`basename "$lib"`
        echo "Getting source for $libb"
        pkg=`dpkg-query -S "$libb" | grep -vE '^(ia32-libs|lib32|gcc|libgcc|libstdc)' | head -n 1 | sed 's/:.*//'`
        pushd "$SRCDIR"
        apt-get -d source "$pkg"
        popd
    done
fi

LD_LIBRARY_PATH="$APPDIR/inst/lib" ldd "$APPDIR/inst/bin/$BINNAME"
